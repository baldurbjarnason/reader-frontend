/*
Text Button

Basic text button component.

Markup:
<button class="TextButton {{modifier_class}}">This is a Text Button</button>

.TextButton:hover - hover state
.TextButton:focus - focus state
.TextButton:active - active state
.TextButton--disabled - disabled state (also styles the `disabled` attribute)
.TextButton--disabled:focus - disabled state (also styles the `disabled` attribute)
.TextButton--warning - only click this if you really know what you're doing
.TextButton--toggled - toggle state is on

StyleGuide 6.TextButton

*/

.TextButton {
  font-family: var(--sans-fonts);
  font-weight: 400;
  flex: 0 1 auto;
  line-height: 1.2;

  display: inline-block;
  padding: 5px 5px 4px;

  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;

  color: var(--link);
  border: none;
  background-color: transparent;

  -ms-touch-action: manipulation;
  touch-action: manipulation;
  text-transform: uppercase;
  font-size: 0.65rem;
  border-bottom: solid 3px transparent;
}
.TextButton:hover {
  color: var(--hover);
  border-bottom: solid 3px var(--link);
  text-decoration: none;
  box-shadow: none;
}

.TextButton:active {
  color: var(--active);
}

.TextButton:focus {
  text-decoration: none;
  background-color: var(--link);
  color: white;
  border-radius: 0.1rem;
}

.TextButton[disabled],
.TextButton--disabled,
.TextButton[disabled]:hover,
.TextButton--disabled:hover {
  color: var(--disabled);
  cursor: not-allowed;
}
.TextButton[disabled]:focus,
.TextButton--disabled:focus {
  color: white;
  border-color: var(--disabled);
  background-color: var(--disabled);
  box-shadow: inset 0 0px 2px 0 rgba(0, 66, 98, 0.15);
}

.TextButton--warning {
  color: var(--primary);
}
.TextButton--information {
  font-family: var(--fonts);
  font-style: italic;
  font-size: 1rem;
  padding: 0 0.5rem;
}
.TextButton--emoji {
  text-shadow: 0 0 var(--link);
  color: transparent;
  line-height: 1.3;
}
.TextButton--tocReturn {
  font-size: 0.65rem;
  text-align: left;
  display: block;
  margin: 0.25rem 1rem;
  text-transform: uppercase;
}

.TextButton--toggled {
  background-color: var(--light);
  padding: 5px 5px 4px;
  border-radius: 0.2rem;
}

.TextButton--noteDelete {
  position: absolute;
  bottom: 0;
  right: 1rem;
  color: var(--primary);
  opacity: 0;
  pointer-events: none;
}

.ReaderNote--hasFocus .TextButton--noteDelete,
.TextButton--noteDelete:focus {
  opacity: 1;
  pointer-events: auto;
}

[data-is='text-button'] [data-is='text-button']:not([hidden]) {
  display: inline-block;
}

[data-is='text-button']:focus {
  outline: solid transparent;
}

[data-is='text-button'] button {
  font-family: var(--sans-fonts);
  font-size: 0.75rem;
  flex: 0 1 auto;
  line-height: 1;

  display: inline-block;

  padding: 0.25rem 1rem 0.25rem;

  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 400;
  color: var(--link);
  border-radius: var(--border-radius);
  -ms-touch-action: manipulation;
  touch-action: manipulation;
  background-color: transparent;
  border: none;
  text-decoration: none !important;
  position: relative;
}

[data-is='text-button'] button:hover {
  color: white !important;
  background-color: var(--rc-dark);
  border-color: var(--rc-dark);
  box-shadow: none;
  text-decoration: none;
}

[data-is='text-button'] button:active {
  background-color: var(--active);
  border-color: var(--active);
}

[data-is='text-button'] button[disabled] {
  background-color: #eee;
  background-image: none;
  border-color: #eee;
  color: #bbb;
  cursor: not-allowed;
}

@keyframes textButtonPop {
  0% {
    box-shadow: 0 0 0 1px rgba(33, 33, 33, 0);
  }
  50% {
    box-shadow: 0 0 0 8px var(--rc-darker);
  }
  100% {
    box-shadow: 0 0 0 3px var(--rc-dark);
  }
}
[data-is='text-button'] button:focus {
  box-shadow: 0 0 0 3px var(--rc-dark);
  outline: solid transparent;
  animation: textButtonPop 0.25s ease-in-out;
}
[data-is='text-button'] button[disabled]:focus {
  border-color: #999;
  background-color: var(--disabled);
  box-shadow: inset 0 0px 2px 0 rgba(0, 66, 98, 0.15);
  background-image: none;
}

@keyframes textButtonSpin {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
[data-is='text-button'] .working {
  padding-right: 1.75rem;
}
[data-is='text-button'] .working svg {
  display: inline-block;
  content: '';
  position: absolute;
  top: 7px;
  right: 10px;
  animation: textButtonSpin 0.5s linear infinite;
  width: 16px;
  height: 16px;
}
